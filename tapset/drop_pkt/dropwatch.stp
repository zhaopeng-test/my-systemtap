#!/usr/bin/stap  
  
############################################################  
# Dropwatch.stp  
# Author: Neil Horman <nhorman@redhat.com>  
# An example script to mimic the behavior of the dropwatch utility  
# http://fedorahosted.org/dropwatch 
#Usge : stap -g --all-modules dropwatch.stp 
############################################################  
  
# Array to hold the list of drop points we find  
global locations  
  
# Note when we turn the monitor on and off  
probe begin { printf("Monitoring for dropped packets\n") }  
probe end { printf("Stopping dropped packet monitor\n") }  
  
# increment a drop counter for every location we drop at  
probe kernel.trace("kfree_skb") { locations[$location] <<< 1 }  
// locations数组索引为$location, 记录kfree_skb被调用时的location参数信息, 即各模块符号表中的内存地址;  
// 使用symname()或者symdata()可以将地址转换成符号信息.  
  
# Every 5 seconds report our drop locations  
probe timer.sec(5)  
{  
  printf("\n")  
  foreach (l in locations-) {  
    printf("%d packets dropped at %s\n",  
           @count(locations[l]), symname(l))  
  }  
  delete locations  
}  
// 每5秒输出一次  
// 按@count(locations[i]) 倒序输出  
// 输出包含符号名, 以及丢的包个数.  
//如果不加载模块, symname无法正确的翻译出函数名. 
